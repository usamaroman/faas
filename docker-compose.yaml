services:

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 5432
      POSTGRES_DB: control-plane
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  clickhouse:
    image: clickhouse/clickhouse-server:24.3
    environment:
      - CLICKHOUSE_DB=metrics
      - CLICKHOUSE_USER=user
      - CLICKHOUSE_PASSWORD=1234
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    ports:
      - "8123:8123" # HTTP interface
      - "9000:9000" # Native client
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    ports:
      - "9092:9092"  # External access
      - "29092:29092"  # Internal Docker network access
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    restart: always

  meter:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DIR: meter
    environment:
      KAFKA_ADDRS: kafka:29092
      UDP_PORT: 5461
      FUNCTION_METRICS_TOPIC: function_metrics
      FUNCTION_ACTIONS_TOPIC: function_actions
    ports:
      - "5461:5461/udp"
    depends_on:
      - kafka
    restart: always

  price_service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DIR: price_service
    environment:
      PG_USER: postgres
      PG_PASSWORD: 5432
      PG_HOST: postgres
      PG_PORT: "5432"
      PG_DATABASE: control-plane
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    restart: always

  notifier:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DIR: notifier
    environment:
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: teamhackathonfaas@gmail.com
      SMTP_PASSWORD: "okef shcf rexv ukrb"
      KAFKA_TOPIC: notify
      KAFKA_CONSUMER_GROUP_ID: notifier-group
      KAFKA_ADDRS: kafka:29092
    depends_on:
      - kafka
    restart: always

  invoicer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DIR: invoicer
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: "9000"
      CLICKHOUSE_DB: metrics
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: "1234"
      PRICE_SERVICE_URL: http://price_service:8085
      KAFKA_ADDRS: kafka:29092
      KAFKA_ACTIONS_TOPIC: function_actions
      KAFKA_NOTIFY_TOPIC: notify
      KAFKA_ACTIONS_CONSUMER_GROUP_NAME: invoicer-actions
      KAFKA_METRICS_CONSUMER_GROUP_NAME: invoicer-metrics
      PORT: "8080"
    ports:
      - "8081:8080"
    depends_on:
      - clickhouse
      - price_service
      - kafka
    restart: always

  control_plane:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DIR: control_plane
    volumes:
      - ./config:/app/config
    environment:     
      KAFKA_ADDRS: kafka:29092
      FUNCTION_METRICS_TOPIC: function_metrics
    ports:
      - "8080:8080"

volumes:
  pg_data:
  clickhouse_data:
  clickhouse_log:
  registry_data:
